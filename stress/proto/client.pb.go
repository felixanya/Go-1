// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Client struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_97d8225afb070776, []int{0}
}
func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (dst *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(dst, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Client) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type ServerCommand struct {
	Cmd                  int32    `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Params               string   `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerCommand) Reset()         { *m = ServerCommand{} }
func (m *ServerCommand) String() string { return proto.CompactTextString(m) }
func (*ServerCommand) ProtoMessage()    {}
func (*ServerCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_97d8225afb070776, []int{1}
}
func (m *ServerCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerCommand.Unmarshal(m, b)
}
func (m *ServerCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerCommand.Marshal(b, m, deterministic)
}
func (dst *ServerCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerCommand.Merge(dst, src)
}
func (m *ServerCommand) XXX_Size() int {
	return xxx_messageInfo_ServerCommand.Size(m)
}
func (m *ServerCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerCommand.DiscardUnknown(m)
}

var xxx_messageInfo_ServerCommand proto.InternalMessageInfo

func (m *ServerCommand) GetCmd() int32 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *ServerCommand) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

func init() {
	proto.RegisterType((*Client)(nil), "Client")
	proto.RegisterType((*ServerCommand)(nil), "ServerCommand")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushClient is the client API for Push service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushClient interface {
	PushCommand(ctx context.Context, in *Client, opts ...grpc.CallOption) (Push_PushCommandClient, error)
}

type pushClient struct {
	cc *grpc.ClientConn
}

func NewPushClient(cc *grpc.ClientConn) PushClient {
	return &pushClient{cc}
}

func (c *pushClient) PushCommand(ctx context.Context, in *Client, opts ...grpc.CallOption) (Push_PushCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Push_serviceDesc.Streams[0], "/Push/PushCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &pushPushCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Push_PushCommandClient interface {
	Recv() (*ServerCommand, error)
	grpc.ClientStream
}

type pushPushCommandClient struct {
	grpc.ClientStream
}

func (x *pushPushCommandClient) Recv() (*ServerCommand, error) {
	m := new(ServerCommand)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PushServer is the server API for Push service.
type PushServer interface {
	PushCommand(*Client, Push_PushCommandServer) error
}

func RegisterPushServer(s *grpc.Server, srv PushServer) {
	s.RegisterService(&_Push_serviceDesc, srv)
}

func _Push_PushCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Client)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PushServer).PushCommand(m, &pushPushCommandServer{stream})
}

type Push_PushCommandServer interface {
	Send(*ServerCommand) error
	grpc.ServerStream
}

type pushPushCommandServer struct {
	grpc.ServerStream
}

func (x *pushPushCommandServer) Send(m *ServerCommand) error {
	return x.ServerStream.SendMsg(m)
}

var _Push_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Push",
	HandlerType: (*PushServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PushCommand",
			Handler:       _Push_PushCommand_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "client.proto",
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_client_97d8225afb070776) }

var fileDescriptor_client_97d8225afb070776 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe3, 0x62, 0x73, 0x06, 0xf3, 0x85,
	0x04, 0xb8, 0x98, 0x4b, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21,
	0x21, 0x2e, 0x96, 0x82, 0xfc, 0xa2, 0x12, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x30, 0x5b,
	0xc9, 0x92, 0x8b, 0x37, 0x38, 0xb5, 0xa8, 0x2c, 0xb5, 0xc8, 0x39, 0x3f, 0x37, 0x37, 0x31, 0x2f,
	0x05, 0xa4, 0x2d, 0x39, 0x17, 0xa2, 0x8d, 0x35, 0x08, 0xc4, 0x14, 0x12, 0xe3, 0x62, 0x2b, 0x48,
	0x2c, 0x4a, 0xcc, 0x2d, 0x06, 0x6b, 0xe4, 0x0c, 0x82, 0xf2, 0x8c, 0x8c, 0xb8, 0x58, 0x02, 0x4a,
	0x8b, 0x33, 0x84, 0xb4, 0xb8, 0xb8, 0x41, 0x34, 0xcc, 0x00, 0x76, 0x3d, 0x88, 0x03, 0xa4, 0xf8,
	0xf4, 0x50, 0x4c, 0x56, 0x62, 0x30, 0x60, 0x4c, 0x62, 0x03, 0xbb, 0xd2, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0xb7, 0xc9, 0x62, 0x36, 0xb5, 0x00, 0x00, 0x00,
}
