// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alms.proto

/*
Package alms is a generated protocol buffer package.

It is generated from these files:
	alms.proto

It has these top-level messages:
	AlmsConfig
	PacksackGetGoldReq
	PacksackGetGoldRsp
*/
package alms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AlmsConfig 救济金配置
type AlmsConfig struct {
	AlmsGetNorm      int64 `protobuf:"varint,1,opt,name=alms_get_norm,json=almsGetNorm" json:"alms_get_norm,omitempty"`
	AlmsGetTimes     int32 `protobuf:"varint,2,opt,name=alms_get_times,json=almsGetTimes" json:"alms_get_times,omitempty"`
	AlmsGetNumber    int64 `protobuf:"varint,3,opt,name=alms_get_number,json=almsGetNumber" json:"alms_get_number,omitempty"`
	AlmsCountDonw    int32 `protobuf:"varint,4,opt,name=alms_count_donw,json=almsCountDonw" json:"alms_count_donw,omitempty"`
	DepositCountDonw int32 `protobuf:"varint,5,opt,name=deposit_count_donw,json=depositCountDonw" json:"deposit_count_donw,omitempty"`
}

func (m *AlmsConfig) Reset()                    { *m = AlmsConfig{} }
func (m *AlmsConfig) String() string            { return proto.CompactTextString(m) }
func (*AlmsConfig) ProtoMessage()               {}
func (*AlmsConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlmsConfig) GetAlmsGetNorm() int64 {
	if m != nil {
		return m.AlmsGetNorm
	}
	return 0
}

func (m *AlmsConfig) GetAlmsGetTimes() int32 {
	if m != nil {
		return m.AlmsGetTimes
	}
	return 0
}

func (m *AlmsConfig) GetAlmsGetNumber() int64 {
	if m != nil {
		return m.AlmsGetNumber
	}
	return 0
}

func (m *AlmsConfig) GetAlmsCountDonw() int32 {
	if m != nil {
		return m.AlmsCountDonw
	}
	return 0
}

func (m *AlmsConfig) GetDepositCountDonw() int32 {
	if m != nil {
		return m.DepositCountDonw
	}
	return 0
}

// PacksackGetGoldReq 背包获取金币请求
type PacksackGetGoldReq struct {
	PlayerId uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *PacksackGetGoldReq) Reset()                    { *m = PacksackGetGoldReq{} }
func (m *PacksackGetGoldReq) String() string            { return proto.CompactTextString(m) }
func (*PacksackGetGoldReq) ProtoMessage()               {}
func (*PacksackGetGoldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PacksackGetGoldReq) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// PacksackGetGoldRsp 背包获取金币响应
type PacksackGetGoldRsp struct {
	Result       bool  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	PacksackGold int64 `protobuf:"varint,2,opt,name=packsack_gold,json=packsackGold" json:"packsack_gold,omitempty"`
}

func (m *PacksackGetGoldRsp) Reset()                    { *m = PacksackGetGoldRsp{} }
func (m *PacksackGetGoldRsp) String() string            { return proto.CompactTextString(m) }
func (*PacksackGetGoldRsp) ProtoMessage()               {}
func (*PacksackGetGoldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PacksackGetGoldRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *PacksackGetGoldRsp) GetPacksackGold() int64 {
	if m != nil {
		return m.PacksackGold
	}
	return 0
}

func init() {
	proto.RegisterType((*AlmsConfig)(nil), "alms.AlmsConfig")
	proto.RegisterType((*PacksackGetGoldReq)(nil), "alms.PacksackGetGoldReq")
	proto.RegisterType((*PacksackGetGoldRsp)(nil), "alms.PacksackGetGoldRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PacksackServer service

type PacksackServerClient interface {
	// GetPacksackGold 获取背包金币
	GetPacksackGold(ctx context.Context, in *PacksackGetGoldReq, opts ...grpc.CallOption) (*PacksackGetGoldRsp, error)
}

type packsackServerClient struct {
	cc *grpc.ClientConn
}

func NewPacksackServerClient(cc *grpc.ClientConn) PacksackServerClient {
	return &packsackServerClient{cc}
}

func (c *packsackServerClient) GetPacksackGold(ctx context.Context, in *PacksackGetGoldReq, opts ...grpc.CallOption) (*PacksackGetGoldRsp, error) {
	out := new(PacksackGetGoldRsp)
	err := grpc.Invoke(ctx, "/alms.PacksackServer/GetPacksackGold", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PacksackServer service

type PacksackServerServer interface {
	// GetPacksackGold 获取背包金币
	GetPacksackGold(context.Context, *PacksackGetGoldReq) (*PacksackGetGoldRsp, error)
}

func RegisterPacksackServerServer(s *grpc.Server, srv PacksackServerServer) {
	s.RegisterService(&_PacksackServer_serviceDesc, srv)
}

func _PacksackServer_GetPacksackGold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PacksackGetGoldReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacksackServerServer).GetPacksackGold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alms.PacksackServer/GetPacksackGold",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacksackServerServer).GetPacksackGold(ctx, req.(*PacksackGetGoldReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PacksackServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alms.PacksackServer",
	HandlerType: (*PacksackServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPacksackGold",
			Handler:    _PacksackServer_GetPacksackGold_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alms.proto",
}

func init() { proto.RegisterFile("alms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x59, 0xfb, 0x41, 0x1d, 0xfb, 0x21, 0x73, 0x90, 0x45, 0x2f, 0x65, 0x15, 0xe9, 0x41,
	0x0a, 0xea, 0x13, 0x48, 0x95, 0xc5, 0x8b, 0xd4, 0x28, 0x78, 0x5c, 0xb6, 0xcd, 0x58, 0x96, 0x26,
	0x9b, 0x98, 0xa4, 0x16, 0xdf, 0xd3, 0x07, 0x92, 0xc4, 0xdd, 0xb5, 0x50, 0xbc, 0x25, 0xbf, 0xf9,
	0xcd, 0x9f, 0x64, 0x06, 0x20, 0x17, 0xd2, 0x4e, 0xb5, 0x51, 0x4e, 0x61, 0xdb, 0x9f, 0x93, 0xef,
	0x08, 0xe0, 0x4e, 0x48, 0x3b, 0x53, 0xe5, 0x7b, 0xb1, 0xc2, 0x04, 0x06, 0x1e, 0x67, 0x2b, 0x72,
	0x59, 0xa9, 0x8c, 0x8c, 0xa3, 0x71, 0x34, 0x69, 0xb1, 0x23, 0x0f, 0x53, 0x72, 0x4f, 0xca, 0x48,
	0xbc, 0x80, 0x61, 0xe3, 0xb8, 0x42, 0x92, 0x8d, 0x0f, 0xc6, 0xd1, 0xa4, 0xc3, 0xfa, 0x95, 0xf4,
	0xea, 0x19, 0x5e, 0xc2, 0xe8, 0x2f, 0x69, 0x23, 0x17, 0x64, 0xe2, 0x56, 0xc8, 0x1a, 0xd4, 0x59,
	0x01, 0x36, 0xde, 0x52, 0x6d, 0x4a, 0x97, 0x71, 0x55, 0x6e, 0xe3, 0x76, 0x88, 0x0b, 0xde, 0xcc,
	0xd3, 0x7b, 0x55, 0x6e, 0xf1, 0x0a, 0x90, 0x93, 0x56, 0xb6, 0x70, 0xbb, 0x6a, 0x27, 0xa8, 0xc7,
	0x55, 0xa5, 0xb1, 0x93, 0x6b, 0xc0, 0x79, 0xbe, 0x5c, 0xdb, 0x7c, 0xb9, 0x4e, 0xc9, 0xa5, 0x4a,
	0x70, 0x46, 0x1f, 0x78, 0x06, 0x87, 0x5a, 0xe4, 0x5f, 0x64, 0xb2, 0x82, 0x87, 0x9f, 0xb5, 0x59,
	0xef, 0x17, 0x3c, 0xf2, 0xe4, 0x79, 0xbf, 0xc5, 0x6a, 0x3c, 0x81, 0xae, 0x21, 0xbb, 0x11, 0x2e,
	0xf8, 0x3d, 0x56, 0xdd, 0xf0, 0x1c, 0x06, 0xba, 0xb2, 0xb3, 0x95, 0x12, 0x3c, 0xcc, 0xa0, 0xc5,
	0xfa, 0x35, 0xf4, 0xfd, 0x37, 0x6f, 0x30, 0xac, 0x23, 0x5f, 0xc8, 0x7c, 0x92, 0xc1, 0x07, 0x18,
	0xa5, 0xe4, 0xe6, 0x3b, 0x12, 0xc6, 0xd3, 0xb0, 0x94, 0xfd, 0xe7, 0x9e, 0xfe, 0x53, 0xb1, 0x7a,
	0xd1, 0x0d, 0x2b, 0xbc, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xc8, 0x4c, 0x48, 0xd0, 0x01,
	0x00, 0x00,
}
