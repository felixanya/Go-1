// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alms.proto

/*
Package alms is a generated protocol buffer package.

It is generated from these files:
	alms.proto

It has these top-level messages:
	AlmsGetGoldReq
	AlmsGetGoldRsp
	AlmsConfig
	AlmsConfigNtf
	PacksackPropInfo
	PlayerPacksackInfoNtf
*/
package alms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "steve/client_pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// msgid:ALMS_GET_GOLD_REQ = 0x6001;  	             // 获取救济金请求
// 获取救济金请求(玩家申请救济金请求)
type AlmsGetGoldReq struct {
	Version          *int32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AlmsGetGoldReq) Reset()                    { *m = AlmsGetGoldReq{} }
func (m *AlmsGetGoldReq) String() string            { return proto.CompactTextString(m) }
func (*AlmsGetGoldReq) ProtoMessage()               {}
func (*AlmsGetGoldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlmsGetGoldReq) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// msgid:ALMS_GET_GOLD_RSP = 0x6002;
// 获取救济金应答(玩家申请救济金响应)
type AlmsGetGoldRsp struct {
	PlayerAlmsTimes  *int32      `protobuf:"varint,1,opt,name=player_alms_times,json=playerAlmsTimes" json:"player_alms_times,omitempty"`
	ChangeGold       *int64      `protobuf:"varint,2,opt,name=change_gold,json=changeGold" json:"change_gold,omitempty"`
	NewVersion       *int32      `protobuf:"varint,3,opt,name=new_version,json=newVersion" json:"new_version,omitempty"`
	NewAlmsConfig    *AlmsConfig `protobuf:"bytes,4,opt,name=new_alms_config,json=newAlmsConfig" json:"new_alms_config,omitempty"`
	Result           *bool       `protobuf:"varint,5,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *AlmsGetGoldRsp) Reset()                    { *m = AlmsGetGoldRsp{} }
func (m *AlmsGetGoldRsp) String() string            { return proto.CompactTextString(m) }
func (*AlmsGetGoldRsp) ProtoMessage()               {}
func (*AlmsGetGoldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AlmsGetGoldRsp) GetPlayerAlmsTimes() int32 {
	if m != nil && m.PlayerAlmsTimes != nil {
		return *m.PlayerAlmsTimes
	}
	return 0
}

func (m *AlmsGetGoldRsp) GetChangeGold() int64 {
	if m != nil && m.ChangeGold != nil {
		return *m.ChangeGold
	}
	return 0
}

func (m *AlmsGetGoldRsp) GetNewVersion() int32 {
	if m != nil && m.NewVersion != nil {
		return *m.NewVersion
	}
	return 0
}

func (m *AlmsGetGoldRsp) GetNewAlmsConfig() *AlmsConfig {
	if m != nil {
		return m.NewAlmsConfig
	}
	return nil
}

func (m *AlmsGetGoldRsp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

// 救济金配置
type AlmsConfig struct {
	AlmsGetNorm      *int64 `protobuf:"varint,1,opt,name=alms_get_norm,json=almsGetNorm" json:"alms_get_norm,omitempty"`
	AlmsGetTimes     *int32 `protobuf:"varint,2,opt,name=alms_get_times,json=almsGetTimes" json:"alms_get_times,omitempty"`
	AlmsGetNumber    *int64 `protobuf:"varint,3,opt,name=alms_get_number,json=almsGetNumber" json:"alms_get_number,omitempty"`
	AlmsCountDonw    *int32 `protobuf:"varint,4,opt,name=alms_count_donw,json=almsCountDonw" json:"alms_count_donw,omitempty"`
	DepositCountDonw *int32 `protobuf:"varint,5,opt,name=deposit_count_donw,json=depositCountDonw" json:"deposit_count_donw,omitempty"`
	Version          *int32 `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AlmsConfig) Reset()                    { *m = AlmsConfig{} }
func (m *AlmsConfig) String() string            { return proto.CompactTextString(m) }
func (*AlmsConfig) ProtoMessage()               {}
func (*AlmsConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AlmsConfig) GetAlmsGetNorm() int64 {
	if m != nil && m.AlmsGetNorm != nil {
		return *m.AlmsGetNorm
	}
	return 0
}

func (m *AlmsConfig) GetAlmsGetTimes() int32 {
	if m != nil && m.AlmsGetTimes != nil {
		return *m.AlmsGetTimes
	}
	return 0
}

func (m *AlmsConfig) GetAlmsGetNumber() int64 {
	if m != nil && m.AlmsGetNumber != nil {
		return *m.AlmsGetNumber
	}
	return 0
}

func (m *AlmsConfig) GetAlmsCountDonw() int32 {
	if m != nil && m.AlmsCountDonw != nil {
		return *m.AlmsCountDonw
	}
	return 0
}

func (m *AlmsConfig) GetDepositCountDonw() int32 {
	if m != nil && m.DepositCountDonw != nil {
		return *m.DepositCountDonw
	}
	return 0
}

func (m *AlmsConfig) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// ALMS_LOGIN_GOLD_CONFIG_NTF = 0x6003;         // 玩家登陆救济金配置通知
// 救济金配置通知
type AlmsConfigNtf struct {
	AlmsConfig       *AlmsConfig `protobuf:"bytes,1,opt,name=alms_config,json=almsConfig" json:"alms_config,omitempty"`
	PlayerGotTimes   *int32      `protobuf:"varint,2,opt,name=player_got_times,json=playerGotTimes" json:"player_got_times,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *AlmsConfigNtf) Reset()                    { *m = AlmsConfigNtf{} }
func (m *AlmsConfigNtf) String() string            { return proto.CompactTextString(m) }
func (*AlmsConfigNtf) ProtoMessage()               {}
func (*AlmsConfigNtf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AlmsConfigNtf) GetAlmsConfig() *AlmsConfig {
	if m != nil {
		return m.AlmsConfig
	}
	return nil
}

func (m *AlmsConfigNtf) GetPlayerGotTimes() int32 {
	if m != nil && m.PlayerGotTimes != nil {
		return *m.PlayerGotTimes
	}
	return 0
}

// PacksackPropInfo 背包道具信息
type PacksackPropInfo struct {
	PropId           *int32           `protobuf:"varint,1,opt,name=prop_id,json=propId" json:"prop_id,omitempty"`
	PropName         *string          `protobuf:"bytes,2,opt,name=prop_name,json=propName" json:"prop_name,omitempty"`
	PropType         *common.PropType `protobuf:"varint,3,opt,name=prop_type,json=propType,enum=common.PropType" json:"prop_type,omitempty"`
	PropCount        *int64           `protobuf:"varint,5,opt,name=prop_count,json=propCount" json:"prop_count,omitempty"`
	PropDescribe     *string          `protobuf:"bytes,6,opt,name=prop_describe,json=propDescribe" json:"prop_describe,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PacksackPropInfo) Reset()                    { *m = PacksackPropInfo{} }
func (m *PacksackPropInfo) String() string            { return proto.CompactTextString(m) }
func (*PacksackPropInfo) ProtoMessage()               {}
func (*PacksackPropInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PacksackPropInfo) GetPropId() int32 {
	if m != nil && m.PropId != nil {
		return *m.PropId
	}
	return 0
}

func (m *PacksackPropInfo) GetPropName() string {
	if m != nil && m.PropName != nil {
		return *m.PropName
	}
	return ""
}

func (m *PacksackPropInfo) GetPropType() common.PropType {
	if m != nil && m.PropType != nil {
		return *m.PropType
	}
	return common.PropType_INVALID_PROP
}

func (m *PacksackPropInfo) GetPropCount() int64 {
	if m != nil && m.PropCount != nil {
		return *m.PropCount
	}
	return 0
}

func (m *PacksackPropInfo) GetPropDescribe() string {
	if m != nil && m.PropDescribe != nil {
		return *m.PropDescribe
	}
	return ""
}

// PACKSACK_LOGIN_INFO_NTF = 0x6004;            // 玩家登录背包信息通知
// PlayerPacksackInfoNtf   玩家背包信息
type PlayerPacksackInfoNtf struct {
	PropInfo         []*PacksackPropInfo `protobuf:"bytes,1,rep,name=prop_info,json=propInfo" json:"prop_info,omitempty"`
	PacksackGold     *int64              `protobuf:"varint,2,opt,name=packsack_gold,json=packsackGold" json:"packsack_gold,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PlayerPacksackInfoNtf) Reset()                    { *m = PlayerPacksackInfoNtf{} }
func (m *PlayerPacksackInfoNtf) String() string            { return proto.CompactTextString(m) }
func (*PlayerPacksackInfoNtf) ProtoMessage()               {}
func (*PlayerPacksackInfoNtf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PlayerPacksackInfoNtf) GetPropInfo() []*PacksackPropInfo {
	if m != nil {
		return m.PropInfo
	}
	return nil
}

func (m *PlayerPacksackInfoNtf) GetPacksackGold() int64 {
	if m != nil && m.PacksackGold != nil {
		return *m.PacksackGold
	}
	return 0
}

func init() {
	proto.RegisterType((*AlmsGetGoldReq)(nil), "alms.AlmsGetGoldReq")
	proto.RegisterType((*AlmsGetGoldRsp)(nil), "alms.AlmsGetGoldRsp")
	proto.RegisterType((*AlmsConfig)(nil), "alms.AlmsConfig")
	proto.RegisterType((*AlmsConfigNtf)(nil), "alms.AlmsConfigNtf")
	proto.RegisterType((*PacksackPropInfo)(nil), "alms.PacksackPropInfo")
	proto.RegisterType((*PlayerPacksackInfoNtf)(nil), "alms.PlayerPacksackInfoNtf")
}

func init() { proto.RegisterFile("alms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xeb, 0x26, 0x6d, 0x26, 0x9f, 0xac, 0x20, 0x58, 0x20, 0x44, 0x64, 0x10, 0xb2, 0x2a,
	0x48, 0x45, 0xb8, 0x70, 0x85, 0x56, 0x8a, 0x7a, 0x89, 0x22, 0xab, 0xe2, 0xc0, 0xc5, 0x72, 0xec,
	0x49, 0xb0, 0x6a, 0xef, 0xb8, 0xf6, 0xa6, 0x51, 0x7e, 0x1b, 0x7f, 0x82, 0x5f, 0xc2, 0x6f, 0x40,
	0x3b, 0xbb, 0x69, 0x12, 0xa4, 0xde, 0x3c, 0x6f, 0x9e, 0xdf, 0xcc, 0x7b, 0xbb, 0x0b, 0x10, 0xe7,
	0x45, 0x3d, 0x2e, 0x2b, 0x52, 0x24, 0x4e, 0xf5, 0xf7, 0xab, 0x4e, 0x42, 0x45, 0x41, 0xd2, 0x60,
	0xfe, 0x05, 0xf4, 0xbe, 0xe5, 0x45, 0x3d, 0x45, 0x35, 0xa5, 0x3c, 0x0d, 0xf1, 0x5e, 0x78, 0x70,
	0xf6, 0x80, 0x55, 0x9d, 0x91, 0xf4, 0x9c, 0x91, 0x13, 0x34, 0xc2, 0x5d, 0xe9, 0xff, 0x71, 0x8e,
	0xc9, 0x75, 0x29, 0x2e, 0xe0, 0x59, 0x99, 0xc7, 0x5b, 0xac, 0x22, 0xad, 0x1d, 0xa9, 0xac, 0xc0,
	0xda, 0xfe, 0xd6, 0x37, 0x0d, 0xfd, 0xc3, 0xad, 0x86, 0xc5, 0x5b, 0x68, 0x27, 0xbf, 0x62, 0xb9,
	0xc2, 0x68, 0x45, 0x79, 0xea, 0x9d, 0x8c, 0x9c, 0xc0, 0x0d, 0xc1, 0x40, 0x5a, 0x4f, 0x13, 0x24,
	0x6e, 0xa2, 0xdd, 0x74, 0x97, 0x65, 0x40, 0xe2, 0xe6, 0x87, 0x41, 0xc4, 0x57, 0xe8, 0x6b, 0x02,
	0x8f, 0x4a, 0x48, 0x2e, 0xb3, 0x95, 0x77, 0x3a, 0x72, 0x82, 0xf6, 0x64, 0x30, 0x66, 0x9b, 0x7a,
	0xd6, 0x15, 0xe3, 0x61, 0x57, 0xe2, 0x66, 0x5f, 0x8a, 0x21, 0x34, 0x2b, 0xac, 0xd7, 0xb9, 0xf2,
	0x1a, 0x23, 0x27, 0x38, 0x0f, 0x6d, 0xe5, 0xff, 0x75, 0x00, 0x0e, 0x68, 0x3e, 0x74, 0x59, 0x7c,
	0x85, 0x2a, 0x92, 0x54, 0x15, 0x6c, 0xc5, 0x0d, 0xdb, 0xb1, 0x71, 0x3d, 0xa3, 0xaa, 0x10, 0xef,
	0xa1, 0xf7, 0xc8, 0x31, 0x7e, 0x4f, 0x78, 0xd1, 0x8e, 0x25, 0x19, 0xb3, 0x1f, 0xa0, 0xbf, 0x57,
	0x5a, 0x17, 0x0b, 0xac, 0xd8, 0x8f, 0x1b, 0x76, 0x77, 0x5a, 0x0c, 0x3e, 0xf2, 0x12, 0x5a, 0x4b,
	0x15, 0xa5, 0x24, 0x37, 0x6c, 0xa9, 0x61, 0x78, 0x57, 0x1a, 0xbd, 0x26, 0xb9, 0x11, 0x1f, 0x41,
	0xa4, 0x58, 0x52, 0x9d, 0xa9, 0x43, 0x6a, 0x83, 0xa9, 0x03, 0xdb, 0xd9, 0xb3, 0x0f, 0xce, 0xb0,
	0x79, 0x7c, 0x86, 0x39, 0x74, 0xf7, 0x7e, 0x67, 0x6a, 0x29, 0x3e, 0x43, 0xfb, 0x30, 0x4f, 0xe7,
	0x89, 0x3c, 0x21, 0xde, 0xa7, 0x14, 0xc0, 0xc0, 0x1e, 0xfa, 0x8a, 0x8e, 0x33, 0xe8, 0x19, 0x7c,
	0x4a, 0x26, 0x05, 0xff, 0xb7, 0x03, 0x83, 0x79, 0x9c, 0xdc, 0xd5, 0x71, 0x72, 0x37, 0xaf, 0xa8,
	0xbc, 0x91, 0x4b, 0x12, 0x2f, 0xe1, 0xac, 0xac, 0xa8, 0x8c, 0xb2, 0xd4, 0xde, 0x94, 0xa6, 0x2e,
	0x6f, 0x52, 0xf1, 0x1a, 0x5a, 0xdc, 0x90, 0x71, 0x81, 0x2c, 0xd8, 0x0a, 0xcf, 0x35, 0x30, 0x8b,
	0x0b, 0x14, 0x9f, 0x6c, 0x53, 0x6d, 0x4b, 0xe4, 0x28, 0x7b, 0x93, 0xc1, 0xd8, 0x5e, 0x65, 0x2d,
	0x7d, 0xbb, 0x2d, 0xd1, 0xd0, 0xf5, 0x97, 0x78, 0x03, 0xc0, 0x74, 0x0e, 0x8b, 0x73, 0x72, 0x43,
	0x16, 0xe0, 0x90, 0xc4, 0x3b, 0xe8, 0x72, 0x3b, 0xc5, 0x3a, 0xa9, 0xb2, 0x05, 0x72, 0x4c, 0xad,
	0xb0, 0xa3, 0xc1, 0x6b, 0x8b, 0xf9, 0xf7, 0xf0, 0x62, 0xce, 0x7e, 0x76, 0x16, 0xf4, 0xfa, 0x3a,
	0xb3, 0x2f, 0x76, 0x97, 0x4c, 0x2e, 0xc9, 0x73, 0x46, 0x6e, 0xd0, 0x9e, 0x0c, 0x4d, 0x62, 0xff,
	0x9b, 0x35, 0x1b, 0xb1, 0x6d, 0x3d, 0xd2, 0x76, 0x0f, 0x1f, 0x40, 0x67, 0x07, 0xea, 0x27, 0xf0,
	0x7d, 0xf8, 0xf3, 0x79, 0xad, 0xf0, 0x01, 0x2f, 0x93, 0x3c, 0x43, 0xa9, 0xa2, 0x72, 0x71, 0xa9,
	0x75, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xaa, 0xd3, 0xda, 0xc7, 0x03, 0x00, 0x00,
}
